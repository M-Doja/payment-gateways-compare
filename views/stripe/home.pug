extends ../layout.pug

block content
	ol.breadcrumb
		li.breadcrumb-item
			a(href="/") Home
		li.breadcrumb-item.active Stripe
	.jumbotron
		h2 Stripe Payment
		ul
			li NodeJS with stripe NPM
			li Input amount and/or description
			li Testing Visa cards (successful chargable): <kbd>4242424242424242</kbd>, expiry: <kbd>01/29</kbd>, CVC: <kbd>123</kbd>
			li or occasionally unsuccessful charge cart: <kbd>4000000000000119</kbd>, expiry: <kbd>01/29</kbd>, CVC: <kbd>111</kbd>
			li Click <kbd>Pay with Stripe</kbd> button
			li Auto redirect to success or failure page depends on the card charged successfully

	div#accordion(role="tablist")
		.card
			.card-header(role="tab" id="heading1")
				h5.mb-0
					a(data-toggle="collapse" href="#collapse1" aria-expanded="true" aria-controls="collapse1") Minimal Checkout
			div#collapse1(class="collapse show" role="tabpanel" aria-labelledby="heading1" data-parent="#accordion")
				.card-body
					form(action="/stripe/charge" method="POST")
						//- Stripe ref: https://stripe.com/docs/checkout
						p <i>Below button is generated by Stripe</i>
						script(src="https://checkout.stripe.com/checkout.js" class="stripe-button" data-key=accessKey data-email="go@simonho.net" data-image="https://www.simonho.net/MyImg150x150.jpg" data-name="simonho288" data-description="Test Payment 1" data-amount=amount data-label="Pay with Card Now" data-locale="auto")
		.card
			.card-header(role="tab" id="heading2")
				h5.mb-0
					a(data-toggle="collapse" href="#collapse2" aria-expanded="true" aria-controls="collapse2") Custom Checkout Button
			#collapse2(class="collapse" role="tabpanel" aria-labelledby="heading2" data-parent="#accordion")
				.card-body
					p <i>Below botton is generated by the ourself</i>
					a#pay(class="btn btn-secondary" href="") Pay with Card now
		.card
			.card-header(role="tab" id="heading3")
				h5.mb-0
					a(data-toggle="collapse" href="#collapse3" aria-expanded="true" aria-controls="collapse3") Inline element
			#collapse3(class="collapse" role="tabpanel" aria-labelledby="heading3" data-parent="#accordion")
				.card-body
					p <i>Below element is generated by Stripe</i>
					form(action="/stripe/charge" method="post" id="payment-form")
						.creditcard-form
							label(class="sr-only" for="card-element") Credit or debit card
							#card-element
								//- a Stripe Element will be inserted here.
							div(id="card-errors" role="alert")
							div(id="my-card-error-alert" class="alert alert-danger" role="alert" style="display:none")
								h4.alert-heading Payment Failure
								p#error-message 
								hr
								p.mb-0 Please use another card and retry payment
						button(id="submit" class="btn btn-primary") Pay Now

	//- Method 2: Custom checkout JS code
	script.
		// Configure Checkout
		var checkout = StripeCheckout.configure({
			key: '#{accessKey}',
			token: function(token) {
				window.location.replace('/stripe/charge/' + token.id)
			},
			image: 'https://www.simonho.net/MyImg150x150.jpg',
			locale: 'auto'
		});

		// Open Checkout when the link is clicked
		$('#pay').on('click', function(evt) {
			checkout.open({
				name: 'simonho288',
				email: 'go@simonho.net',
				description: 'Test Payment 2',
				currency: 'usd',
				amount: 100
			});
			evt.preventDefault();
		});

		// Close Checkout on page navigation:
		window.addEventListener('popstate', function() {
			checkout.close();
		});

	//- Method 3: Inline element
	script(src="https://js.stripe.com/v3/")
	script.
		$(document).ready(function() {
			// Create a Stripe client
			var stripe = Stripe('#{accessKey}');
			// Create an instance of Elements
			var elements = stripe.elements();

			// Custom styling can be passed to options when creating an Element.
			// (Note that this demo uses a wider set of styles than the guide below.)
			var style = {
				base: {
					color: '#32325d',
					lineHeight: '24px',
					fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
					fontSmoothing: 'antialiased',
					fontSize: '16px',
					'::placeholder': {
						color: '#aab7c4'
					}
				},
				invalid: {
					color: '#fa755a',
					iconColor: '#fa755a'
				}
			};

			// Create an instance of the card Element
			var card = elements.create('card', {
				style: style,
				hidePostalCode: true
			});

			// Add an instance of the card Element into the `card-element` <div>
			card.mount('#card-element');

			// Handle real-time validation errors from the card Element.
			card.addEventListener('change', function(event) {
				var displayError = document.getElementById('card-errors');
				if (event.error) {
					displayError.textContent = event.error.message;
				} else {
					displayError.textContent = '';
				}
			});

			// Handle form submission
			var form = document.getElementById('payment-form');
			form.addEventListener('submit', function(event) {
				event.preventDefault();

				$('#submit').html('<i class="fa fa-spinner fa-spin"></i>&nbsp;Processing...')
				$('#submit').attr('disabled', true)

				stripe.createToken(card).then(function(result) {
					if (result.error) {
						// Inform the user if there was an error
						var errorElement = document.getElementById('card-errors');
						errorElement.textContent = result.error.message;
					} else {
						// Send the token to your server
						stripeTokenHandler(result.token);
					}
				});

				return false;
			});

			function stripeTokenHandler(token) {
				window.location.replace('/stripe/charge/' + token.id);
			}
		});
